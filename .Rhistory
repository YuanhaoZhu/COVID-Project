DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
# covid <- drop_na(covid)
study_data <- covid[, 9:14]
summary(study_data)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid <- drop_na(covid)
covid
study_data <- covid[, 9:14]
study_data
covid
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid <- drop_na(covid)
study_data <- covid[, 4:9]
study_data
summary(study_data)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid <- drop_na(covid)
study_data <- covid[, 9:14]
study_data
summary(study_data)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
#We use the raw data in sheet 2 for data processing. The transformed data is ill structured. For instance ln1 is 0 and missing values were also assigned value 0.
library("readxl")
library("dplyr")
rawdata <- read_excel("COVID.xlsx", sheet = "Sheet2",col_names=T,range = cell_cols(1:9))
colnames(rawdata)<-c("CODE","COUNTRY",	"DATE",	"TC",	"TD","STI",	"POP","GDPCAP","HDI")
#a function take natrual log and leave 0 if the cell is 0 and NA if the cell is NA
avoid_zero_ln<-function(x){
n=ifelse(x == 0, 0, log(x))
return(n)
}
data<-rawdata %>% mutate_at(c("TC",	"TD","STI",	"POP","GDPCAP"), avoid_zero_ln)
colnames(data)<-c("CODE","COUNTRY",	"DATE",	"logTC",	"logTD","logSTI",	"logPOP","logGDPCAP","HDI")
#keep both variables in log scale and original ones.
#The processed data is  called covid. Note that NA values are perserved.
covid<-cbind(data,rawdata[,c(4:8)])
head(covid)
covid<-cbind(data,rawdata[,c(4:8)])
covid$DATE <- as.Date(covid$DATE , format = "%Y-%m-%d")
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid[is.na(covid)] <- 0
study_data <- covid[, 4:9]
summary(study_data)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid[is.na(covid)] <- 0
study_data <- covid[, 9:14]
summary(study_data)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid[is.na(covid)] <- 0
study_data <- covid[, c(9,10,11,12,14)]
summary(study_data)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
# OLS
pov <- lm(HDI~., study_data)
summary(pov)
require(foreign)
require(MASS)
summary(study_data)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
# OLS
pov <- lm(HDI~., study_data)
summary(pov)
# OLS
pov.ols <- lm(HDI~., study_data)
summary(pov.ols)
plot(pov.ols)
# OLS
pov.ols <- lm(HDI~., study_data)
summary(pov.ols)
opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
plot(pov.ols, las = 1)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.bisquare)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.bisquare)
summary(pov.rls)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.bisquare)
summary(pov.rls)
opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
plot(pov.rls, las = 1)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.bisquare)
summary(pov.rls)
# opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
plot(pov.rls)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.bisquare)
summary(pov.rls)
anova(pov.ols, pov.rls)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.bisquare)
summary(pov.rls)
# RLS
pov.rls <- rlm(HDI~. , data=study_data) #, psi = psi.bisquare
summary(pov.rls)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.hampel) #, psi = psi.bisquare
summary(pov.rls)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.hampel) #, psi = psi.bisquare
summary(pov.rls)
# Weighted R2
r2ww <- function(x){
SSe <- sum((x$w*x$resid)^2); #the residual sum of squares is weighted
observed <- x$resid+x$fitted;
SSt <- sum((x$w*(observed-mean(observed)))^2); #the total sum of squares is weighted
value <- 1-SSe/SSt;
return(value);
}
r2ww(pov.rls)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.hampel) #, psi = psi.bisquare
summary(pov.rls)
# Weighted R2
r2ww <- function(x){
SSe <- sum((x$w*x$resid)^2); #the residual sum of squares is weighted
observed <- x$resid+x$fitted;
SSt <- sum((x$w*(observed-mean(observed)))^2); #the total sum of squares is weighted
value <- 1-SSe/SSt;
return(value);
}
print(paste0("Weighted R2 = ", r2ww(pov.rls)))
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.hampel) #, psi = psi.bisquare
summary(pov.rls)
# Weighted R2
r2ww <- function(x){
SSe <- sum((x$w*x$resid)^2); #the residual sum of squares is weighted
observed <- x$resid+x$fitted;
SSt <- sum((x$w*(observed-mean(observed)))^2); #the total sum of squares is weighted
value <- 1-SSe/SSt;
return(value);
}
print(paste0("Weighted R2 = ",round(r2ww(pov.rls),5)))
covid
our_data <- covid[, c(9,10,11,12,14,15,16,17)]
our_data <- covid[, c(9,10,11,12,14,15,16,17)]
head(our_data)
#We use the raw data in sheet 2 for data processing. The transformed data is ill structured. For instance ln1 is 0 and missing values were also assigned value 0.
library("readxl")
library("dplyr")
rawdata <- read_excel("COVID.xlsx", sheet = "Sheet2",col_names=T,range = cell_cols(1:9))
colnames(rawdata)<-c("CODE","COUNTRY",	"DATE",	"TC",	"TD","STI",	"POP","GDPCAP","HDI")
#a function take natrual log and leave 0 if the cell is 0 and NA if the cell is NA
avoid_zero_ln<-function(x){
n=ifelse(x == 0, 0, log(x))
return(n)
}
data<-rawdata %>% mutate_at(c("TC",	"TD","STI",	"POP","GDPCAP"), avoid_zero_ln)
colnames(data)<-c("CODE","COUNTRY",	"DATE",	"logTC",	"logTD","logSTI",	"logPOP","logGDPCAP","HDI")
#keep both variables in log scale and original ones.
#The processed data is  called covid. Note that NA values are perserved.
covid<-cbind(data,rawdata[,c(4:8)])
covid
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid[is.na(covid)] <- 0
study_data <- covid[, c(9,10,11,12,14)]
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
covid[is.na(covid)] <- 0
study_data <- covid[, 4:9] # c(9,10,11,12,14)
summary(study_data)
# Time Phase
begin_phase = min(covid$DATE)
dev_phase = as.Date("2020-03-01", format = "%Y-%m-%d")
outbreak_phase = as.Date("2020-07-01", format = "%Y-%m-%d")
# 0 = beginning phase, 1 = developing phase, 2 = outbreak phase
covid <- mutate(covid, phase = case_when(
DATE < dev_phase ~ 0,
DATE >= dev_phase & DATE < outbreak_phase ~ 1,
DATE >= outbreak_phase ~ 2
))
covid <- mutate(covid, mortality_rate = TC/TD)
# 0 = UNDERDEVELOPED, 1 = DEVELOPING, 2 = DEVELOPED
covid$type[covid$GDPCAP<5338.454]<-0
covid$type[covid$GDPCAP>= 5338.454 & covid$GDPCAP<31400.840]<- 1
covid$type[covid$GDPCAP>=31400.840 ]<- 2
# covid[is.na(covid)] <- 0
covid <- covid %>% drop_na()
study_data <- covid[, 4:9] # c(9,10,11,12,14)
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
upper<-cor(study_data)
upper[upper.tri(cor(study_data))]<-""
upper<-as.data.frame(upper)
upper
# OLS
pov.ols <- lm(HDI~., data = study_data)
summary(pov.ols)
opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
plot(pov.ols, las = 1)
# RLS
pov.rls <- rlm(HDI~. , data=study_data, psi = psi.hampel) #, psi = psi.bisquare
summary(pov.rls)
# Weighted R2
r2ww <- function(x){
SSe <- sum((x$w*x$resid)^2); #the residual sum of squares is weighted
observed <- x$resid+x$fitted;
SSt <- sum((x$w*(observed-mean(observed)))^2); #the total sum of squares is weighted
value <- 1-SSe/SSt;
return(value);
}
print(paste0("Weighted R2 = ",round(r2ww(pov.rls),5)))
# OLS
pov.ols <- lm(GDPCAP~., data = study_data)
# OLS
pov.ols <- lm(logGDPCAP~., data = study_data)
summary(pov.ols)
opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
plot(pov.ols, las = 1)
# RLS
pov.rls <- rlm(logGDPCAP~. , data=study_data, psi = psi.hampel) #, psi = psi.bisquare
summary(pov.rls)
# Weighted R2
r2ww <- function(x){
SSe <- sum((x$w*x$resid)^2); #the residual sum of squares is weighted
observed <- x$resid+x$fitted;
SSt <- sum((x$w*(observed-mean(observed)))^2); #the total sum of squares is weighted
value <- 1-SSe/SSt;
return(value);
}
print(paste0("Weighted R2 = ",round(r2ww(pov.rls),5)))
knitr::opts_chunk$set(echo = TRUE)
#We use the raw data in sheet 2 for data processing. The transformed data is ill structured. For instance ln1 is 0 and missing values were also assigned value 0.
library("readxl")
knitr::opts_chunk$set(echo = TRUE)
#We use the raw data in sheet 2 for data processing. The transformed data is ill structured. For instance ln1 is 0 and missing values were also assigned value 0.
library("readxl")
insrall.packages("readxl")
install.packages("readxl")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
#We use the raw data in sheet 2 for data processing. The transformed data is ill structured. For instance ln1 is 0 and missing values were also assigned value 0.
library("readxl")
library("dplyr")
rawdata <- read_excel("COVID.xlsx", sheet = "Sheet2",col_names=T,range = cell_cols(1:9))
colnames(rawdata)<-c("CODE","COUNTRY",	"DATE",	"TC",	"TD","STI",	"POP","GDPCAP","HDI")
#a function take natrual log and leave 0 if the cell is 0 and NA if the cell is NA
avoid_zero_ln<-function(x){
n=ifelse(x == 0, 0, log(x))
return(n)
}
data<-rawdata %>% mutate_at(c("TC",	"TD","STI",	"POP","GDPCAP"), avoid_zero_ln)
colnames(data)<-c("CODE","COUNTRY",	"DATE",	"logTC",	"logTD","logSTI",	"logPOP","logGDPCAP","HDI")
#keep both variables in log scale and original ones.
#The processed data is  called covid. Note that NA values are perserved.
covid<-cbind(data,rawdata[,c(4:8)])
head(covid)
library("ggplot2")
theme_set(theme_bw())
library("sf")
install.packages("sf")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
install.packages("rnaturalearth")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
install.packages("rnaturalearthdata")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("maps")
install.packages("maps")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("maps")
world_map <- map_data("world")
world_map <- map_data("world")
deathrate<-c()
for( i in unique(covid$COUNTRY)){
d<-covid[covid$COUNTRY==i,11]
p<-covid[covid$COUNTRY==i,13]
if(all(is.na(p)) |all(is.na(d)) ){rate<-NA}
else{
totaldeath<-max(d,na.rm=T)
population<-max(p,na.rm = T)
rate<-(totaldeath/population)*100}
deathrate<-c(deathrate,rate)
}
d_rate<-data.frame(region=unique(covid$COUNTRY), deathrate)
levels(d_rate$region)[levels(d_rate$region)=="United States"] <- "USA"
comb <- left_join(world_map,d_rate, by = "region")
ggplot(comb, aes(long, lat, group = group))+
geom_polygon(aes(fill = deathrate ), color = "white")+
scale_fill_viridis_c(
alpha = 0.7,
begin = 0,
end = 1,
direction = -1,
option = "A",
values = NULL,
space = "Lab",
na.value = "grey80",
guide = "colourbar",
aesthetics = "fill"
)+labs(title="World Map of Total Death Rate for Each Country",
x ="Longitude", y = "Latitude7")
# plot trend of covid cases and death world wide
sub_covid<-covid[,c('DATE',"TC","TD")]
sub_covid$FDATE<-as.factor(sub_covid$DATE)
world_cases<-aggregate(TC~FDATE, data=sub_covid, FUN=sum ,na.action=na.omit)
world_death<-aggregate(TD~FDATE, data=sub_covid, FUN=sum ,na.action=na.omit)
world_death<-subset(world_death, select = -c(1) )
world_cd<-cbind(world_cases,world_death)
world_cd$logTC<-log(world_cd$TC)
world_cd$logTD<-log(world_cd$TD)
ggplot(data = world_cd, aes(x = as.Date(FDATE))) +
geom_line(aes(y = logTC, colour = "logTC")) +
geom_line(aes(y = logTD, colour = "logTD")) +
scale_colour_manual("", values = c("logTC"="green", "logTD"="red")) +
xlab("time") +
ylab("log counts")+
labs(title="total cases and deaths worldwide in log scale")
#plot correlation between GDP VS STI AND
deathrate<-c()
for( i in unique(covid$COUNTRY)){
d<-covid[covid$COUNTRY==i,11]
p<-covid[covid$COUNTRY==i,13]
if(all(is.na(p)) |all(is.na(d)) ){rate<-NA}
else{
totaldeath<-max(d,na.rm=T)
population<-max(p,na.rm = T)
rate<-(totaldeath/population)*100}
deathrate<-c(deathrate,rate)
}
#correlation of total death vs HDI is different for underdeveloped developing and developed countries, result of the paper may be wrong!
quantile(covid$GDPCAP,na.rm=T)
bygdp<-covid[,c('COUNTRY',"TD","GDPCAP","HDI")]
bygdp$type[bygdp$GDPCAP<5338.454]<-"UNDERDEVELOPED"
bygdp$type[bygdp$GDPCAP> 5338.454 &bygdp$GDPCAP<31400.840]<-"DEVELOPING"
bygdp$type[bygdp$GDPCAP>31400.840 ]<-"DEVELOPED"
ud<-bygdp[bygdp$type=="UNDERDEVELOPED",]
d<-bygdp[bygdp$type=="DEVELOPING",]
dd<-bygdp[bygdp$type=="DEVELOPED",]
ud_corr<-cor(ud$TD,ud$HDI,use="pairwise.complete.obs")
d_corr<-cor(d$TD,d$HDI,use="pairwise.complete.obs")
dd_corr<-cor(dd$TD,dd$HDI,use="pairwise.complete.obs")
ud_p<-cor.test(ud$TD,ud$HDI,use="pairwise.complete.obs")$p.value
d_p<-cor.test(d$TD,d$HDI,use="pairwise.complete.obs")$p.value
dd_p<-cor.test(dd$TD,dd$HDI,use="pairwise.complete.obs")$p.value
data.frame(type=c("underdeveloped","developing","developed"),corrs=c(ud_corr,d_corr,dd_corr),pval=c(ud_p,d_p,dd_p))
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages('tidyverse')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
